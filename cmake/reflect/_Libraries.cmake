# This file will be regenerated by `mulle-sourcetree-to-cmake` via
# `mulle-sde reflect` and any edits will be lost.
#
# This file will be included by cmake/share/Files.cmake
#
# Disable generation of this file with:
#
# mulle-sde environment set MULLE_SOURCETREE_TO_CMAKE_LIBRARIES_FILE DISABLE
#
if( MULLE_TRACE_INCLUDE)
   message( STATUS "# Include \"${CMAKE_CURRENT_LIST_FILE}\"" )
endif()

#
# Generated from sourcetree: 3035297A-114F-447F-AA5A-EDF4E3B174B6;dl;no-all-load,no-build,no-cmake-inherit,no-cmake-platform-openbsd,no-delete,no-dependency,no-fs,no-import,no-platform-mingw,no-platform-windows,no-share,no-update,version-max-darwin-10.99.0;dl,dlfcn
# Disable with : `mulle-sourcetree mark dl `
# Disable for this platform: `mulle-sourcetree mark dl no-cmake-platform-${MULLE_UNAME}`
# Disable for a sdk: `mulle-sourcetree mark dl no-cmake-sdk-<name>`
#
if( NOT (${CMAKE_SYSTEM_NAME} MATCHES "Windows" OR ${CMAKE_SYSTEM_NAME} MATCHES "OpenBSD"))
   if( NOT DL_LIBRARY)
      find_library( DL_LIBRARY NAMES
         dl
         dlfcn
      )
      message( STATUS "DL_LIBRARY is ${DL_LIBRARY}")
      #
      # The order looks ascending, but due to the way this file is read
      # it ends up being descending, which is what we need.
      #
      if( DL_LIBRARY)
         #
         # Add DL_LIBRARY to OS_SPECIFIC_LIBRARIES list.
         # Disable with: `mulle-sourcetree mark dl no-cmake-add`
         #
         list( APPEND OS_SPECIFIC_LIBRARIES ${DL_LIBRARY})
         # intentionally left blank
      else()
         # Disable with: `mulle-sourcetree mark dl no-require-link`
         message( FATAL_ERROR "DL_LIBRARY was not found")
      endif()
   endif()
   endif()


#
# Generated from sourcetree: E0AA557E-995A-4BE2-947A-717E07DF1939;psapi;no-all-load,no-build,no-cmake-inherit,no-delete,no-dependency,no-fs,no-import,no-public,no-require,no-update,only-platform-mingw,only-platform-windows;
# Disable with : `mulle-sourcetree mark psapi `
# Disable for this platform: `mulle-sourcetree mark psapi no-cmake-platform-${MULLE_UNAME}`
# Disable for a sdk: `mulle-sourcetree mark psapi no-cmake-sdk-<name>`
#
if( ${CMAKE_SYSTEM_NAME} MATCHES "Windows")
   if( NOT PSAPI_LIBRARY)
      find_library( PSAPI_LIBRARY NAMES
         psapi
      )
      message( STATUS "PSAPI_LIBRARY is ${PSAPI_LIBRARY}")
      #
      # The order looks ascending, but due to the way this file is read
      # it ends up being descending, which is what we need.
      #
      if( PSAPI_LIBRARY)
         #
         # Add PSAPI_LIBRARY to OS_SPECIFIC_LIBRARIES list.
         # Disable with: `mulle-sourcetree mark psapi no-cmake-add`
         #
         list( APPEND OS_SPECIFIC_LIBRARIES ${PSAPI_LIBRARY})
         # intentionally left blank
      else()
         # Enable with: `mulle-sourcetree mark psapi require`
         message( STATUS "PSAPI_LIBRARY is missing but it is marked as \"no-require\"")
      endif()
   endif()
   endif()
